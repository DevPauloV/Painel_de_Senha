;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 18/05/2023 16:41:00
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$021A	$	_div_16x16_s_l:
$021A	$1303			BCF	STATUS, RP1
$021B	$1283			BCF	STATUS, RP0
;math.ppas,291 :: 		
;math.ppas,293 :: 		
$021C	$0D71			RLF	STACK_1, W
;math.ppas,294 :: 		
$021D	$0DF8			RLF	STACK_8, F
;math.ppas,295 :: 		
$021E	$0DF9			RLF	STACK_9, F
;math.ppas,296 :: 		
$021F	$0874			MOVF	STACK_4, W
;math.ppas,297 :: 		
$0220	$02F8			SUBWF	STACK_8, F
;math.ppas,298 :: 		
$0221	$0875			MOVF	STACK_5, W
;math.ppas,299 :: 		
$0222	$1C03			BTFSS	STATUS, C
;math.ppas,300 :: 		
$0223	$0F75			INCFSZ	STACK_5, W
;math.ppas,301 :: 		
$0224	$02F9			SUBWF	STACK_9, F
;math.ppas,302 :: 		
$0225	$0DF0			RLF	STACK_0, F
;math.ppas,304 :: 		
$0226	$0DF1			RLF	STACK_1, F
;math.ppas,305 :: 		
$0227	$300F			MOVLW	15
;math.ppas,307 :: 		
$0228	$00FC			MOVWF	STACK_12
;math.ppas,308 :: 		
$0229	$0D71			RLF	STACK_1, W
;math.ppas,309 :: 		
$022A	$0DF8			RLF	STACK_8, F
;math.ppas,310 :: 		
$022B	$0DF9			RLF	STACK_9, F
;math.ppas,312 :: 		
$022C	$0874			MOVF	STACK_4, W
;math.ppas,313 :: 		
$022D	$1C70			BTFSS	STACK_0, 0
;math.ppas,314 :: 		
$022E	$2A35			GOTO	$+7
;math.ppas,315 :: 		
$022F	$02F8			SUBWF	STACK_8, F
;math.ppas,316 :: 		
$0230	$0875			MOVF	STACK_5, W
;math.ppas,317 :: 		
$0231	$1C03			BTFSS	STATUS, C
;math.ppas,318 :: 		
$0232	$0F75			INCFSZ	STACK_5, W
;math.ppas,319 :: 		
$0233	$02F9			SUBWF	STACK_9, F
;math.ppas,321 :: 		
$0234	$2A3A			GOTO	$+6
;math.ppas,322 :: 		
$0235	$07F8			ADDWF	STACK_8, F
;math.ppas,323 :: 		
$0236	$0875			MOVF	STACK_5, W
;math.ppas,324 :: 		
$0237	$1803			BTFSC	STATUS, C
;math.ppas,325 :: 		
$0238	$0F75			INCFSZ	STACK_5, W
;math.ppas,327 :: 		
$0239	$07F9			ADDWF	STACK_9, F
;math.ppas,328 :: 		
$023A	$0DF0			RLF	STACK_0, F
;math.ppas,330 :: 		
$023B	$0DF1			RLF	STACK_1, F
;math.ppas,331 :: 		
$023C	$0BFC			DECFSZ	STACK_12, F
;math.ppas,333 :: 		
$023D	$2A29			GOTO	$-20
;math.ppas,334 :: 		
$023E	$1870			BTFSC	STACK_0, 0
;math.ppas,335 :: 		
$023F	$2A46			GOTO	$+7
;math.ppas,336 :: 		
$0240	$0874			MOVF	STACK_4, W
;math.ppas,337 :: 		
$0241	$07F8			ADDWF	STACK_8, F
;math.ppas,338 :: 		
$0242	$0875			MOVF	STACK_5, W
;math.ppas,339 :: 		
$0243	$1803			BTFSC	STATUS, C
;math.ppas,340 :: 		
$0244	$0F75			INCFSZ	STACK_5, W
;math.ppas,341 :: 		
$0245	$07F9			ADDWF	STACK_9, F
;math.ppas,342 :: 		
$0246	$	math_L_6:
;math.ppas,343 :: 		
$0246	$0008			RETURN
$0177	$	_div_16x16_s:
$0177	$1303			BCF	STATUS, RP1
$0178	$1283			BCF	STATUS, RP0
;math.ppas,346 :: 		
;math.ppas,348 :: 		
$0179	$01FD			CLRF	STACK_13
;math.ppas,349 :: 		
$017A	$01F9			CLRF	STACK_9
;math.ppas,350 :: 		
$017B	$01F8			CLRF	STACK_8
;math.ppas,351 :: 		
$017C	$0871			MOVF	STACK_1, W
;math.ppas,352 :: 		
$017D	$0470			IORWF	STACK_0, W
;math.ppas,353 :: 		
$017E	$1903			BTFSC	STATUS, Z
;math.ppas,355 :: 		
$017F	$3400			RETLW	0
;math.ppas,356 :: 		
$0180	$0871			MOVF	STACK_1, W
;math.ppas,357 :: 		
$0181	$0675			XORWF	STACK_5, W
;math.ppas,358 :: 		
$0182	$00FA			MOVWF	STACK_10
;math.ppas,359 :: 		
$0183	$1BFA			BTFSC	STACK_10, 7
;math.ppas,361 :: 		
$0184	$09FD			COMF	STACK_13, F
;math.ppas,363 :: 		
$0185	$01FB			CLRF	STACK_11
;math.ppas,364 :: 		
$0186	$1FF5			BTFSS	STACK_5, 7
;math.ppas,366 :: 		
$0187	$298D			GOTO	$+6
;math.ppas,367 :: 		
$0188	$09F4			COMF	STACK_4, F
;math.ppas,368 :: 		
$0189	$09F5			COMF	STACK_5, F
;math.ppas,369 :: 		
$018A	$0AF4			INCF	STACK_4, F
;math.ppas,370 :: 		
$018B	$1903			BTFSC	STATUS, Z
;math.ppas,372 :: 		
$018C	$0AF5			INCF	STACK_5, F
;math.ppas,373 :: 		
$018D	$1FF1			BTFSS	STACK_1, 7
;math.ppas,375 :: 		
$018E	$2994			GOTO	$+6
;math.ppas,376 :: 		
$018F	$09F0			COMF	STACK_0, F
;math.ppas,377 :: 		
$0190	$09F1			COMF	STACK_1, F
;math.ppas,378 :: 		
$0191	$0AF0			INCF	STACK_0, F
;math.ppas,379 :: 		
$0192	$1903			BTFSC	STATUS, Z
;math.ppas,381 :: 		
$0193	$0AF1			INCF	STACK_1, F
;math.ppas,382 :: 		
$0194	$0871			MOVF	STACK_1, W
;math.ppas,383 :: 		
$0195	$0475			IORWF	STACK_5, W
;math.ppas,384 :: 		
$0196	$00FA			MOVWF	STACK_10
;math.ppas,385 :: 		
$0197	$1BFA			BTFSC	STACK_10, 7
;math.ppas,386 :: 		
$0198	$29A9			GOTO	$+17
;math.ppas,388 :: 		
$0199	$221A			CALL	_div_16x16_s_l
;math.ppas,390 :: 		
$019A	$187B			BTFSC	STACK_11, 0
;math.ppas,392 :: 		
$019B	$29BC			GOTO	$+33
;math.ppas,393 :: 		
$019C	$1FFD			BTFSS	STACK_13, 7
;math.ppas,395 :: 		
$019D	$3400			RETLW	0
;math.ppas,396 :: 		
$019E	$09F0			COMF	STACK_0, F
;math.ppas,397 :: 		
$019F	$09F1			COMF	STACK_1, F
;math.ppas,398 :: 		
$01A0	$0AF0			INCF	STACK_0, F
;math.ppas,399 :: 		
$01A1	$1903			BTFSC	STATUS, Z
;math.ppas,401 :: 		
$01A2	$0AF1			INCF	STACK_1, F
;math.ppas,402 :: 		
$01A3	$09F8			COMF	STACK_8, F
;math.ppas,403 :: 		
$01A4	$09F9			COMF	STACK_9, F
;math.ppas,404 :: 		
$01A5	$0AF8			INCF	STACK_8, F
;math.ppas,405 :: 		
$01A6	$1903			BTFSC	STATUS, Z
;math.ppas,407 :: 		
$01A7	$0AF9			INCF	STACK_9, F
;math.ppas,409 :: 		
$01A8	$3400			RETLW	0
;math.ppas,410 :: 		
$01A9	$1FF5			BTFSS	STACK_5, 7
;math.ppas,411 :: 		
$01AA	$29B8			GOTO	$+14
;math.ppas,412 :: 		
$01AB	$1BF1			BTFSC	STACK_1, 7
;math.ppas,413 :: 		
$01AC	$29B4			GOTO	$+8
;math.ppas,414 :: 		
$01AD	$0871			MOVF	STACK_1, W
;math.ppas,415 :: 		
$01AE	$00F9			MOVWF	STACK_9
;math.ppas,416 :: 		
$01AF	$0870			MOVF	STACK_0, W
;math.ppas,417 :: 		
$01B0	$00F8			MOVWF	STACK_8
;math.ppas,418 :: 		
$01B1	$01F1			CLRF	STACK_1
;math.ppas,419 :: 		
$01B2	$01F0			CLRF	STACK_0
;math.ppas,420 :: 		
$01B3	$299C			GOTO	$-23
;math.ppas,421 :: 		
$01B4	$01F1			CLRF	STACK_1
;math.ppas,422 :: 		
$01B5	$01F0			CLRF	STACK_0
;math.ppas,423 :: 		
$01B6	$0AF0			INCF	STACK_0, F
;math.ppas,425 :: 		
$01B7	$3400			RETLW	0
;math.ppas,426 :: 		
$01B8	$09F1			COMF	STACK_1, F
;math.ppas,427 :: 		
$01B9	$09F0			COMF	STACK_0, F
;math.ppas,428 :: 		
$01BA	$0AFB			INCF	STACK_11, F
;math.ppas,430 :: 		
$01BB	$2999			GOTO	$-34
;math.ppas,431 :: 		
$01BC	$0AF8			INCF	STACK_8, F
;math.ppas,432 :: 		
$01BD	$1903			BTFSC	STATUS, Z
;math.ppas,433 :: 		
$01BE	$0AF9			INCF	STACK_9, F
;math.ppas,434 :: 		
$01BF	$0874			MOVF	STACK_4, W
;math.ppas,435 :: 		
$01C0	$0278			SUBWF	STACK_8, W
;math.ppas,436 :: 		
$01C1	$1D03			BTFSS	STATUS, Z
;math.ppas,437 :: 		
$01C2	$299C			GOTO	$-38
;math.ppas,438 :: 		
$01C3	$0875			MOVF	STACK_5, W
;math.ppas,439 :: 		
$01C4	$0279			SUBWF	STACK_9, W
;math.ppas,440 :: 		
$01C5	$1D03			BTFSS	STATUS, Z
;math.ppas,441 :: 		
$01C6	$299C			GOTO	$-42
;math.ppas,442 :: 		
$01C7	$01F9			CLRF	STACK_9
;math.ppas,443 :: 		
$01C8	$01F8			CLRF	STACK_8
;math.ppas,444 :: 		
$01C9	$0AF0			INCF	STACK_0, F
;math.ppas,445 :: 		
$01CA	$1903			BTFSC	STATUS, Z
;math.ppas,446 :: 		
$01CB	$0AF1			INCF	STACK_1, F
;math.ppas,447 :: 		
$01CC	$1FF1			BTFSS	STACK_1, 7
;math.ppas,448 :: 		
$01CD	$299C			GOTO	$-49
;math.ppas,449 :: 		
$01CE	$0000			NOP
;math.ppas,450 :: 		
$01CF	$34FF			RETLW	255
;math.ppas,451 :: 		
$01D0	$	math_L_7:
;math.ppas,452 :: 		
$01D0	$0008			RETURN
$01D1	$	_mul_16x16_s:
$01D1	$1303			BCF	STATUS, RP1
$01D2	$1283			BCF	STATUS, RP0
;math.ppas,203 :: 		
;math.ppas,205 :: 		
$01D3	$01FB			CLRF	STACK_11
;math.ppas,206 :: 		
$01D4	$01FA			CLRF	STACK_10
;math.ppas,207 :: 		
$01D5	$01F9			CLRF	STACK_9
;math.ppas,208 :: 		
$01D6	$3080			MOVLW	128
;math.ppas,210 :: 		
$01D7	$00F8			MOVWF	STACK_8
;math.ppas,212 :: 		
$01D8	$01FD			CLRF	STACK_13
;math.ppas,213 :: 		
$01D9	$1FF1			BTFSS	STACK_1, 7
;math.ppas,214 :: 		
$01DA	$29E1			GOTO	$+7
;math.ppas,215 :: 		
$01DB	$09F1			COMF	STACK_1, F
;math.ppas,216 :: 		
$01DC	$09F0			COMF	STACK_0, F
;math.ppas,217 :: 		
$01DD	$0AF0			INCF	STACK_0, F
;math.ppas,218 :: 		
$01DE	$1903			BTFSC	STATUS, Z
;math.ppas,219 :: 		
$01DF	$0AF1			INCF	STACK_1, F
;math.ppas,221 :: 		
$01E0	$0AFD			INCF	STACK_13, F
;math.ppas,222 :: 		
$01E1	$1FF5			BTFSS	STACK_5, 7
;math.ppas,223 :: 		
$01E2	$29E9			GOTO	$+7
;math.ppas,224 :: 		
$01E3	$09F5			COMF	STACK_5, F
;math.ppas,225 :: 		
$01E4	$09F4			COMF	STACK_4, F
;math.ppas,226 :: 		
$01E5	$0AF4			INCF	STACK_4, F
;math.ppas,227 :: 		
$01E6	$1903			BTFSC	STATUS, Z
;math.ppas,228 :: 		
$01E7	$0AF5			INCF	STACK_5, F
;math.ppas,230 :: 		
$01E8	$0AFD			INCF	STACK_13, F
;math.ppas,231 :: 		
$01E9	$0CF1			RRF	STACK_1, F
;math.ppas,233 :: 		
$01EA	$0CF0			RRF	STACK_0, F
;math.ppas,234 :: 		
$01EB	$1C03			BTFSS	STATUS, C
;math.ppas,235 :: 		
$01EC	$29F6			GOTO	$+10
;math.ppas,236 :: 		
$01ED	$0874			MOVF	STACK_4, W
;math.ppas,238 :: 		
$01EE	$07F9			ADDWF	STACK_9, F
;math.ppas,239 :: 		
$01EF	$0875			MOVF	STACK_5, W
;math.ppas,240 :: 		
$01F0	$1803			BTFSC	STATUS, C
;math.ppas,241 :: 		
$01F1	$0F75			INCFSZ	STACK_5, W
;math.ppas,242 :: 		
$01F2	$07FA			ADDWF	STACK_10, F
;math.ppas,243 :: 		
$01F3	$1803			BTFSC	STATUS, C
;math.ppas,244 :: 		
$01F4	$0AFB			INCF	STACK_11, F
;math.ppas,246 :: 		
$01F5	$1003			BCF	STATUS, C
;math.ppas,247 :: 		
$01F6	$1FF0			BTFSS	STACK_0, 7
;math.ppas,248 :: 		
$01F7	$29FE			GOTO	$+7
;math.ppas,249 :: 		
$01F8	$0874			MOVF	STACK_4, W
;math.ppas,250 :: 		
$01F9	$07FA			ADDWF	STACK_10, F
;math.ppas,251 :: 		
$01FA	$1803			BTFSC	STATUS, C
;math.ppas,252 :: 		
$01FB	$0AFB			INCF	STACK_11, F
;math.ppas,253 :: 		
$01FC	$0875			MOVF	STACK_5, W
;math.ppas,255 :: 		
$01FD	$07FB			ADDWF	STACK_11, F
;math.ppas,256 :: 		
$01FE	$0CFB			RRF	STACK_11, F
;math.ppas,257 :: 		
$01FF	$0CFA			RRF	STACK_10, F
;math.ppas,258 :: 		
$0200	$0CF9			RRF	STACK_9, F
;math.ppas,260 :: 		
$0201	$0CF8			RRF	STACK_8, F
;math.ppas,261 :: 		
$0202	$1C03			BTFSS	STATUS, C
;math.ppas,262 :: 		
$0203	$29E9			GOTO	$-26
;math.ppas,263 :: 		
$0204	$1C7D			BTFSS	STACK_13, 0
;math.ppas,265 :: 		
$0205	$2A11			GOTO	$+12
;math.ppas,266 :: 		
$0206	$09FB			COMF	STACK_11, F
;math.ppas,267 :: 		
$0207	$09FA			COMF	STACK_10, F
;math.ppas,268 :: 		
$0208	$09F9			COMF	STACK_9, F
;math.ppas,270 :: 		
$0209	$09F8			COMF	STACK_8, F
;math.ppas,271 :: 		
$020A	$0AF8			INCF	STACK_8, F
;math.ppas,272 :: 		
$020B	$1903			BTFSC	STATUS, Z
;math.ppas,273 :: 		
$020C	$0AF9			INCF	STACK_9, F
;math.ppas,274 :: 		
$020D	$1903			BTFSC	STATUS, Z
;math.ppas,275 :: 		
$020E	$0AFA			INCF	STACK_10, F
;math.ppas,276 :: 		
$020F	$1903			BTFSC	STATUS, Z
;math.ppas,278 :: 		
$0210	$0AFB			INCF	STACK_11, F
;math.ppas,279 :: 		
$0211	$087B			MOVF	STACK_11, W
;math.ppas,280 :: 		
$0212	$00F3			MOVWF	STACK_3
;math.ppas,281 :: 		
$0213	$087A			MOVF	STACK_10, W
;math.ppas,282 :: 		
$0214	$00F2			MOVWF	STACK_2
;math.ppas,283 :: 		
$0215	$0879			MOVF	STACK_9, W
;math.ppas,284 :: 		
$0216	$00F1			MOVWF	STACK_1
;math.ppas,285 :: 		
$0217	$0878			MOVF	STACK_8, W
;math.ppas,286 :: 		
$0218	$00F0			MOVWF	STACK_0
;math.ppas,287 :: 		
$0219	$	math_L_5:
;math.ppas,288 :: 		
$0219	$0008			RETURN
$0004	$	_main:
;painel.pbas,9 :: 		main:
$0004	$	_main_main:
;painel.pbas,10 :: 		TRISA=%11111111
$0004	$30FF			MOVLW	255
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$0085			MOVWF	TRISA
;painel.pbas,11 :: 		TRISB=%00000000
$0008	$0186			CLRF	TRISB, 1
;painel.pbas,12 :: 		TRISC=%00000000
$0009	$0187			CLRF	TRISC, 1
;painel.pbas,13 :: 		INTCON=%00000000
$000A	$018B			CLRF	INTCON, 1
;painel.pbas,14 :: 		ANSEL=%00000000
$000B	$1703			BSF	STATUS, RP1
$000C	$1283			BCF	STATUS, RP0
$000D	$019E			CLRF	ANSEL, 1
;painel.pbas,15 :: 		ANSELH=%00000000
$000E	$019F			CLRF	ANSELH, 1
;painel.pbas,17 :: 		PORTC=0
$000F	$1303			BCF	STATUS, RP1
$0010	$0187			CLRF	PORTC, 1
;painel.pbas,18 :: 		PORTB=0
$0011	$0186			CLRF	PORTB, 1
;painel.pbas,20 :: 		seleciona = 1
$0012	$3001			MOVLW	1
$0013	$00A0			MOVWF	_seleciona
$0014	$01A1			CLRF	_seleciona+1
;painel.pbas,21 :: 		incrementaA = 0
$0015	$01A2			CLRF	_incrementaa
$0016	$01A3			CLRF	_incrementaa+1
;painel.pbas,22 :: 		incrementaB = 0
$0017	$01A4			CLRF	_incrementab
$0018	$01A5			CLRF	_incrementab+1
;painel.pbas,23 :: 		Guiche = 1
$0019	$3001			MOVLW	1
$001A	$00A6			MOVWF	_guiche
$001B	$01A7			CLRF	_guiche+1
;painel.pbas,24 :: 		dezena = 0
$001C	$01A8			CLRF	_dezena
$001D	$01A9			CLRF	_dezena+1
;painel.pbas,25 :: 		unidade = 0
$001E	$01AA			CLRF	_unidade
$001F	$01AB			CLRF	_unidade+1
;painel.pbas,26 :: 		BAB = false
$0020	$01AC			CLRF	_bab, 1
;painel.pbas,27 :: 		BC1 = false
$0021	$01AD			CLRF	_bc1, 1
;painel.pbas,28 :: 		BG = false
$0022	$01AE			CLRF	_bg, 1
;painel.pbas,30 :: 		executa:
$0023	$	_main_executa:
;painel.pbas,33 :: 		if PORTA.0 = 1 then
$0023	$1303			BCF	STATUS, RP1
$0024	$1283			BCF	STATUS, RP0
$0025	$3001			MOVLW	1
$0026	$0505			ANDWF	PORTA, 0
$0027	$00F2			MOVWF	STACK_2
$0028	$0872			MOVF	STACK_2, 0
$0029	$3A01			XORLW	1
$002A	$1D03			BTFSS	STATUS, Z
$002B	$2843			GOTO	painel_L_2
$002C	$	painel_L_1:
;painel.pbas,34 :: 		if BAB = false then
$002C	$082C			MOVF	_bab, 0
$002D	$3A00			XORLW	0
$002E	$1D03			BTFSS	STATUS, Z
$002F	$2843			GOTO	painel_L_5
$0030	$	painel_L_4:
;painel.pbas,35 :: 		BAB = true
$0030	$30FF			MOVLW	255
$0031	$00AC			MOVWF	_bab
;painel.pbas,36 :: 		inc(seleciona)
$0032	$0AA0			INCF	_seleciona, 1
$0033	$1903			BTFSC	STATUS, Z
$0034	$0AA1			INCF	_seleciona+1, 1
;painel.pbas,37 :: 		if seleciona > 2 then seleciona = 1 end if
$0035	$3080			MOVLW	128
$0036	$00F0			MOVWF	STACK_0
$0037	$3080			MOVLW	128
$0038	$0621			XORWF	_seleciona+1, 0
$0039	$0270			SUBWF	STACK_0, 0
$003A	$1D03			BTFSS	STATUS, Z
$003B	$283E			GOTO	L_main_0
$003C	$0820			MOVF	_seleciona, 0
$003D	$3C02			SUBLW	2
$003E	$	L_main_0:
$003E	$1803			BTFSC	STATUS, C
$003F	$2843			GOTO	painel_L_8
$0040	$	painel_L_7:
$0040	$3001			MOVLW	1
$0041	$00A0			MOVWF	_seleciona
$0042	$01A1			CLRF	_seleciona+1
$0043	$	painel_L_8:
$0043	$	painel_L_9:
$0043	$	painel_L_5:
;painel.pbas,38 :: 		end if
$0043	$	painel_L_6:
$0043	$	painel_L_2:
;painel.pbas,39 :: 		end if
$0043	$	painel_L_3:
;painel.pbas,41 :: 		if PORTA.0 = 0 then
$0043	$3001			MOVLW	1
$0044	$0505			ANDWF	PORTA, 0
$0045	$00F2			MOVWF	STACK_2
$0046	$0872			MOVF	STACK_2, 0
$0047	$3A00			XORLW	0
$0048	$1D03			BTFSS	STATUS, Z
$0049	$284B			GOTO	painel_L_11
$004A	$	painel_L_10:
;painel.pbas,42 :: 		BAB = false
$004A	$01AC			CLRF	_bab, 1
$004B	$	painel_L_11:
;painel.pbas,43 :: 		end if
$004B	$	painel_L_12:
;painel.pbas,46 :: 		if seleciona = 1 then
$004B	$3000			MOVLW	0
$004C	$0621			XORWF	_seleciona+1, 0
$004D	$1D03			BTFSS	STATUS, Z
$004E	$2851			GOTO	L_main_1
$004F	$3001			MOVLW	1
$0050	$0620			XORWF	_seleciona, 0
$0051	$	L_main_1:
$0051	$1D03			BTFSS	STATUS, Z
$0052	$287A			GOTO	painel_L_14
$0053	$	painel_L_13:
;painel.pbas,47 :: 		if PORTA.1 = 1 then
$0053	$3000			MOVLW	0
$0054	$1885			BTFSC	PORTA, 1
$0055	$3001			MOVLW	1
$0056	$00F2			MOVWF	STACK_2
$0057	$0872			MOVF	STACK_2, 0
$0058	$3A01			XORLW	1
$0059	$1D03			BTFSS	STATUS, Z
$005A	$2871			GOTO	painel_L_17
$005B	$	painel_L_16:
;painel.pbas,48 :: 		if BC1 = false then
$005B	$082D			MOVF	_bc1, 0
$005C	$3A00			XORLW	0
$005D	$1D03			BTFSS	STATUS, Z
$005E	$2871			GOTO	painel_L_20
$005F	$	painel_L_19:
;painel.pbas,49 :: 		BC1 = true
$005F	$30FF			MOVLW	255
$0060	$00AD			MOVWF	_bc1
;painel.pbas,50 :: 		inc(incrementaA)
$0061	$0AA2			INCF	_incrementaa, 1
$0062	$1903			BTFSC	STATUS, Z
$0063	$0AA3			INCF	_incrementaa+1, 1
;painel.pbas,51 :: 		if incrementaA > 99 then incrementaA=0 end if
$0064	$3080			MOVLW	128
$0065	$00F0			MOVWF	STACK_0
$0066	$3080			MOVLW	128
$0067	$0623			XORWF	_incrementaa+1, 0
$0068	$0270			SUBWF	STACK_0, 0
$0069	$1D03			BTFSS	STATUS, Z
$006A	$286D			GOTO	L_main_2
$006B	$0822			MOVF	_incrementaa, 0
$006C	$3C63			SUBLW	99
$006D	$	L_main_2:
$006D	$1803			BTFSC	STATUS, C
$006E	$2871			GOTO	painel_L_23
$006F	$	painel_L_22:
$006F	$01A2			CLRF	_incrementaa
$0070	$01A3			CLRF	_incrementaa+1
$0071	$	painel_L_23:
$0071	$	painel_L_24:
$0071	$	painel_L_20:
;painel.pbas,52 :: 		end if
$0071	$	painel_L_21:
$0071	$	painel_L_17:
;painel.pbas,53 :: 		end if
$0071	$	painel_L_18:
;painel.pbas,54 :: 		if PORTA.1 = 0 then
$0071	$3000			MOVLW	0
$0072	$1885			BTFSC	PORTA, 1
$0073	$3001			MOVLW	1
$0074	$00F2			MOVWF	STACK_2
$0075	$0872			MOVF	STACK_2, 0
$0076	$3A00			XORLW	0
$0077	$1D03			BTFSS	STATUS, Z
$0078	$287A			GOTO	painel_L_26
$0079	$	painel_L_25:
;painel.pbas,55 :: 		BC1 = false
$0079	$01AD			CLRF	_bc1, 1
$007A	$	painel_L_26:
;painel.pbas,56 :: 		end if
$007A	$	painel_L_27:
$007A	$	painel_L_14:
;painel.pbas,57 :: 		end if
$007A	$	painel_L_15:
;painel.pbas,60 :: 		if seleciona = 2 then
$007A	$3000			MOVLW	0
$007B	$0621			XORWF	_seleciona+1, 0
$007C	$1D03			BTFSS	STATUS, Z
$007D	$2880			GOTO	L_main_3
$007E	$3002			MOVLW	2
$007F	$0620			XORWF	_seleciona, 0
$0080	$	L_main_3:
$0080	$1D03			BTFSS	STATUS, Z
$0081	$28A9			GOTO	painel_L_29
$0082	$	painel_L_28:
;painel.pbas,61 :: 		if PORTA.1 = 1 then
$0082	$3000			MOVLW	0
$0083	$1885			BTFSC	PORTA, 1
$0084	$3001			MOVLW	1
$0085	$00F2			MOVWF	STACK_2
$0086	$0872			MOVF	STACK_2, 0
$0087	$3A01			XORLW	1
$0088	$1D03			BTFSS	STATUS, Z
$0089	$28A0			GOTO	painel_L_32
$008A	$	painel_L_31:
;painel.pbas,62 :: 		if BC1 = false then
$008A	$082D			MOVF	_bc1, 0
$008B	$3A00			XORLW	0
$008C	$1D03			BTFSS	STATUS, Z
$008D	$28A0			GOTO	painel_L_35
$008E	$	painel_L_34:
;painel.pbas,63 :: 		BC1 = true
$008E	$30FF			MOVLW	255
$008F	$00AD			MOVWF	_bc1
;painel.pbas,64 :: 		inc(incrementaB)
$0090	$0AA4			INCF	_incrementab, 1
$0091	$1903			BTFSC	STATUS, Z
$0092	$0AA5			INCF	_incrementab+1, 1
;painel.pbas,65 :: 		if incrementaB > 99 then incrementaB=0 end if
$0093	$3080			MOVLW	128
$0094	$00F0			MOVWF	STACK_0
$0095	$3080			MOVLW	128
$0096	$0625			XORWF	_incrementab+1, 0
$0097	$0270			SUBWF	STACK_0, 0
$0098	$1D03			BTFSS	STATUS, Z
$0099	$289C			GOTO	L_main_4
$009A	$0824			MOVF	_incrementab, 0
$009B	$3C63			SUBLW	99
$009C	$	L_main_4:
$009C	$1803			BTFSC	STATUS, C
$009D	$28A0			GOTO	painel_L_38
$009E	$	painel_L_37:
$009E	$01A4			CLRF	_incrementab
$009F	$01A5			CLRF	_incrementab+1
$00A0	$	painel_L_38:
$00A0	$	painel_L_39:
$00A0	$	painel_L_35:
;painel.pbas,66 :: 		end if
$00A0	$	painel_L_36:
$00A0	$	painel_L_32:
;painel.pbas,67 :: 		end if
$00A0	$	painel_L_33:
;painel.pbas,68 :: 		if PORTA.1 = 0 then
$00A0	$3000			MOVLW	0
$00A1	$1885			BTFSC	PORTA, 1
$00A2	$3001			MOVLW	1
$00A3	$00F2			MOVWF	STACK_2
$00A4	$0872			MOVF	STACK_2, 0
$00A5	$3A00			XORLW	0
$00A6	$1D03			BTFSS	STATUS, Z
$00A7	$28A9			GOTO	painel_L_41
$00A8	$	painel_L_40:
;painel.pbas,69 :: 		BC1 = false
$00A8	$01AD			CLRF	_bc1, 1
$00A9	$	painel_L_41:
;painel.pbas,70 :: 		end if
$00A9	$	painel_L_42:
$00A9	$	painel_L_29:
;painel.pbas,71 :: 		end if
$00A9	$	painel_L_30:
;painel.pbas,74 :: 		if PORTA.3 = 1 then
$00A9	$3000			MOVLW	0
$00AA	$1985			BTFSC	PORTA, 3
$00AB	$3001			MOVLW	1
$00AC	$00F2			MOVWF	STACK_2
$00AD	$0872			MOVF	STACK_2, 0
$00AE	$3A01			XORLW	1
$00AF	$1D03			BTFSS	STATUS, Z
$00B0	$28C8			GOTO	painel_L_44
$00B1	$	painel_L_43:
;painel.pbas,75 :: 		if BG = false then
$00B1	$082E			MOVF	_bg, 0
$00B2	$3A00			XORLW	0
$00B3	$1D03			BTFSS	STATUS, Z
$00B4	$28C8			GOTO	painel_L_47
$00B5	$	painel_L_46:
;painel.pbas,76 :: 		BG = true
$00B5	$30FF			MOVLW	255
$00B6	$00AE			MOVWF	_bg
;painel.pbas,77 :: 		inc(Guiche)
$00B7	$0AA6			INCF	_guiche, 1
$00B8	$1903			BTFSC	STATUS, Z
$00B9	$0AA7			INCF	_guiche+1, 1
;painel.pbas,78 :: 		if Guiche > 4 then Guiche=1 end if
$00BA	$3080			MOVLW	128
$00BB	$00F0			MOVWF	STACK_0
$00BC	$3080			MOVLW	128
$00BD	$0627			XORWF	_guiche+1, 0
$00BE	$0270			SUBWF	STACK_0, 0
$00BF	$1D03			BTFSS	STATUS, Z
$00C0	$28C3			GOTO	L_main_5
$00C1	$0826			MOVF	_guiche, 0
$00C2	$3C04			SUBLW	4
$00C3	$	L_main_5:
$00C3	$1803			BTFSC	STATUS, C
$00C4	$28C8			GOTO	painel_L_50
$00C5	$	painel_L_49:
$00C5	$3001			MOVLW	1
$00C6	$00A6			MOVWF	_guiche
$00C7	$01A7			CLRF	_guiche+1
$00C8	$	painel_L_50:
$00C8	$	painel_L_51:
$00C8	$	painel_L_47:
;painel.pbas,79 :: 		end if
$00C8	$	painel_L_48:
$00C8	$	painel_L_44:
;painel.pbas,80 :: 		end if
$00C8	$	painel_L_45:
;painel.pbas,81 :: 		if PORTA.3 = 0 then
$00C8	$3000			MOVLW	0
$00C9	$1985			BTFSC	PORTA, 3
$00CA	$3001			MOVLW	1
$00CB	$00F2			MOVWF	STACK_2
$00CC	$0872			MOVF	STACK_2, 0
$00CD	$3A00			XORLW	0
$00CE	$1D03			BTFSS	STATUS, Z
$00CF	$28D1			GOTO	painel_L_53
$00D0	$	painel_L_52:
;painel.pbas,82 :: 		BG = false
$00D0	$01AE			CLRF	_bg, 1
$00D1	$	painel_L_53:
;painel.pbas,83 :: 		end if
$00D1	$	painel_L_54:
;painel.pbas,87 :: 		if PORTA.2 = 1 then
$00D1	$3000			MOVLW	0
$00D2	$1905			BTFSC	PORTA, 2
$00D3	$3001			MOVLW	1
$00D4	$00F2			MOVWF	STACK_2
$00D5	$0872			MOVF	STACK_2, 0
$00D6	$3A01			XORLW	1
$00D7	$1D03			BTFSS	STATUS, Z
$00D8	$28E9			GOTO	painel_L_56
$00D9	$	painel_L_55:
;painel.pbas,88 :: 		incrementaA = 0
$00D9	$01A2			CLRF	_incrementaa
$00DA	$01A3			CLRF	_incrementaa+1
;painel.pbas,89 :: 		seleciona = 1
$00DB	$3001			MOVLW	1
$00DC	$00A0			MOVWF	_seleciona
$00DD	$01A1			CLRF	_seleciona+1
;painel.pbas,90 :: 		incrementaB = 0
$00DE	$01A4			CLRF	_incrementab
$00DF	$01A5			CLRF	_incrementab+1
;painel.pbas,91 :: 		Guiche = 1
$00E0	$3001			MOVLW	1
$00E1	$00A6			MOVWF	_guiche
$00E2	$01A7			CLRF	_guiche+1
;painel.pbas,92 :: 		BAB = false
$00E3	$01AC			CLRF	_bab, 1
;painel.pbas,93 :: 		BC1 = false
$00E4	$01AD			CLRF	_bc1, 1
;painel.pbas,94 :: 		BG = false
$00E5	$01AE			CLRF	_bg, 1
;painel.pbas,95 :: 		PORTB.4 = 1
$00E6	$	painel_L_58:
$00E6	$1606			BSF	PORTB, 4
$00E7	$	painel_L_59:
;painel.pbas,96 :: 		PORTB.5 = 1
$00E7	$	painel_L_60:
$00E7	$1686			BSF	PORTB, 5
$00E8	$	painel_L_61:
;painel.pbas,97 :: 		PORTB.6 = 0
$00E8	$1306			BCF	PORTB, 6
$00E9	$	painel_L_63:
$00E9	$	painel_L_56:
;painel.pbas,98 :: 		end if
$00E9	$	painel_L_57:
;painel.pbas,101 :: 		gosub mostra
$00E9	$20EB			CALL	_main_mostra
;painel.pbas,102 :: 		goto executa
$00EA	$2823			GOTO	_main_executa
;painel.pbas,103 :: 		mostra:
$00EB	$	_main_mostra:
;painel.pbas,106 :: 		if seleciona = 1 then
$00EB	$3000			MOVLW	0
$00EC	$1303			BCF	STATUS, RP1
$00ED	$1283			BCF	STATUS, RP0
$00EE	$0621			XORWF	_seleciona+1, 0
$00EF	$1D03			BTFSS	STATUS, Z
$00F0	$28F3			GOTO	L_main_6
$00F1	$3001			MOVLW	1
$00F2	$0620			XORWF	_seleciona, 0
$00F3	$	L_main_6:
$00F3	$1D03			BTFSS	STATUS, Z
$00F4	$2910			GOTO	painel_L_65
$00F5	$	painel_L_64:
;painel.pbas,107 :: 		dezena= incrementaA div 10
$00F5	$300A			MOVLW	10
$00F6	$00F4			MOVWF	STACK_4
$00F7	$01F5			CLRF	STACK_4+1
$00F8	$0822			MOVF	_incrementaa, 0
$00F9	$00F0			MOVWF	STACK_0
$00FA	$0823			MOVF	_incrementaa+1, 0
$00FB	$00F1			MOVWF	STACK_0+1
$00FC	$2177			CALL	_div_16x16_s
$00FD	$0870			MOVF	STACK_0, 0
$00FE	$00A8			MOVWF	_dezena
$00FF	$0871			MOVF	STACK_0+1, 0
$0100	$00A9			MOVWF	_dezena+1
;painel.pbas,108 :: 		unidade= incrementaA - (dezena*10)
$0101	$300A			MOVLW	10
$0102	$00F4			MOVWF	STACK_4
$0103	$01F5			CLRF	STACK_4+1
$0104	$21D1			CALL	_mul_16x16_s
$0105	$0870			MOVF	STACK_0, 0
$0106	$0222			SUBWF	_incrementaa, 0
$0107	$00AA			MOVWF	_unidade
$0108	$0871			MOVF	STACK_0+1, 0
$0109	$1C03			BTFSS	STATUS, C
$010A	$3F01			ADDLW	1
$010B	$0223			SUBWF	_incrementaa+1, 0
$010C	$00AB			MOVWF	_unidade+1
;painel.pbas,109 :: 		PORTB.4 = 1
$010D	$	painel_L_67:
$010D	$1606			BSF	PORTB, 4
$010E	$	painel_L_68:
;painel.pbas,110 :: 		PORTB.5 = 1
$010E	$	painel_L_69:
$010E	$1686			BSF	PORTB, 5
$010F	$	painel_L_70:
;painel.pbas,111 :: 		PORTB.6 = 0
$010F	$1306			BCF	PORTB, 6
$0110	$	painel_L_72:
$0110	$	painel_L_65:
;painel.pbas,112 :: 		end if
$0110	$	painel_L_66:
;painel.pbas,114 :: 		if seleciona = 2 then
$0110	$3000			MOVLW	0
$0111	$0621			XORWF	_seleciona+1, 0
$0112	$1D03			BTFSS	STATUS, Z
$0113	$2916			GOTO	L_main_7
$0114	$3002			MOVLW	2
$0115	$0620			XORWF	_seleciona, 0
$0116	$	L_main_7:
$0116	$1D03			BTFSS	STATUS, Z
$0117	$2933			GOTO	painel_L_74
$0118	$	painel_L_73:
;painel.pbas,115 :: 		dezena= incrementaB div 10
$0118	$300A			MOVLW	10
$0119	$00F4			MOVWF	STACK_4
$011A	$01F5			CLRF	STACK_4+1
$011B	$0824			MOVF	_incrementab, 0
$011C	$00F0			MOVWF	STACK_0
$011D	$0825			MOVF	_incrementab+1, 0
$011E	$00F1			MOVWF	STACK_0+1
$011F	$2177			CALL	_div_16x16_s
$0120	$0870			MOVF	STACK_0, 0
$0121	$00A8			MOVWF	_dezena
$0122	$0871			MOVF	STACK_0+1, 0
$0123	$00A9			MOVWF	_dezena+1
;painel.pbas,116 :: 		unidade= incrementaB - (dezena*10)
$0124	$300A			MOVLW	10
$0125	$00F4			MOVWF	STACK_4
$0126	$01F5			CLRF	STACK_4+1
$0127	$21D1			CALL	_mul_16x16_s
$0128	$0870			MOVF	STACK_0, 0
$0129	$0224			SUBWF	_incrementab, 0
$012A	$00AA			MOVWF	_unidade
$012B	$0871			MOVF	STACK_0+1, 0
$012C	$1C03			BTFSS	STATUS, C
$012D	$3F01			ADDLW	1
$012E	$0225			SUBWF	_incrementab+1, 0
$012F	$00AB			MOVWF	_unidade+1
;painel.pbas,117 :: 		PORTB.4 = 0
$0130	$1206			BCF	PORTB, 4
$0131	$	painel_L_77:
;painel.pbas,118 :: 		PORTB.5 = 0
$0131	$1286			BCF	PORTB, 5
$0132	$	painel_L_79:
;painel.pbas,119 :: 		PORTB.6 = 1
$0132	$	painel_L_80:
$0132	$1706			BSF	PORTB, 6
$0133	$	painel_L_81:
$0133	$	painel_L_74:
;painel.pbas,120 :: 		end if
$0133	$	painel_L_75:
;painel.pbas,123 :: 		PORTC = dezena
$0133	$0828			MOVF	_dezena, 0
$0134	$0087			MOVWF	PORTC
;painel.pbas,124 :: 		PORTC.4 = 1  PORTC.5 = 0   PORTC.6 = 0 PORTC.7 = 0
$0135	$	painel_L_82:
$0135	$1607			BSF	PORTC, 4
$0136	$	painel_L_83:
$0136	$1287			BCF	PORTC, 5
$0137	$	painel_L_85:
$0137	$1307			BCF	PORTC, 6
$0138	$	painel_L_87:
$0138	$1387			BCF	PORTC, 7
$0139	$	painel_L_89:
;painel.pbas,125 :: 		delay_ms(5)
$0139	$3007			MOVLW	7
$013A	$00FB			MOVWF	STACK_11
$013B	$30FF			MOVLW	255
$013C	$00FA			MOVWF	STACK_10
$013D	$0BFB			DECFSZ	STACK_11, F
$013E	$2940			GOTO	$+2
$013F	$2943			GOTO	$+4
$0140	$0BFA			DECFSZ	STACK_10, F
$0141	$2940			GOTO	$-1
$0142	$293D			GOTO	$-5
$0143	$3078			MOVLW	120
$0144	$00FA			MOVWF	STACK_10
$0145	$0BFA			DECFSZ	STACK_10, F
$0146	$2945			GOTO	$-1
$0147	$0000			NOP
$0148	$0000			NOP
;painel.pbas,128 :: 		PORTC = unidade
$0149	$082A			MOVF	_unidade, 0
$014A	$0087			MOVWF	PORTC
;painel.pbas,129 :: 		PORTC.4 = 0  PORTC.5 = 1   PORTC.6 = 0 PORTC.7 = 0
$014B	$1207			BCF	PORTC, 4
$014C	$	painel_L_91:
$014C	$	painel_L_92:
$014C	$1687			BSF	PORTC, 5
$014D	$	painel_L_93:
$014D	$1307			BCF	PORTC, 6
$014E	$	painel_L_95:
$014E	$1387			BCF	PORTC, 7
$014F	$	painel_L_97:
;painel.pbas,130 :: 		delay_ms(5)
$014F	$3007			MOVLW	7
$0150	$00FB			MOVWF	STACK_11
$0151	$30FF			MOVLW	255
$0152	$00FA			MOVWF	STACK_10
$0153	$0BFB			DECFSZ	STACK_11, F
$0154	$2956			GOTO	$+2
$0155	$2959			GOTO	$+4
$0156	$0BFA			DECFSZ	STACK_10, F
$0157	$2956			GOTO	$-1
$0158	$2953			GOTO	$-5
$0159	$3078			MOVLW	120
$015A	$00FA			MOVWF	STACK_10
$015B	$0BFA			DECFSZ	STACK_10, F
$015C	$295B			GOTO	$-1
$015D	$0000			NOP
$015E	$0000			NOP
;painel.pbas,133 :: 		PORTC = Guiche
$015F	$0826			MOVF	_guiche, 0
$0160	$0087			MOVWF	PORTC
;painel.pbas,134 :: 		PORTC.4 = 0  PORTC.5 = 0   PORTC.6 = 1 PORTC.7 = 0
$0161	$1207			BCF	PORTC, 4
$0162	$	painel_L_99:
$0162	$1287			BCF	PORTC, 5
$0163	$	painel_L_101:
$0163	$	painel_L_102:
$0163	$1707			BSF	PORTC, 6
$0164	$	painel_L_103:
$0164	$1387			BCF	PORTC, 7
$0165	$	painel_L_105:
;painel.pbas,135 :: 		delay_ms(5)
$0165	$3007			MOVLW	7
$0166	$00FB			MOVWF	STACK_11
$0167	$30FF			MOVLW	255
$0168	$00FA			MOVWF	STACK_10
$0169	$0BFB			DECFSZ	STACK_11, F
$016A	$296C			GOTO	$+2
$016B	$296F			GOTO	$+4
$016C	$0BFA			DECFSZ	STACK_10, F
$016D	$296C			GOTO	$-1
$016E	$2969			GOTO	$-5
$016F	$3078			MOVLW	120
$0170	$00FA			MOVWF	STACK_10
$0171	$0BFA			DECFSZ	STACK_10, F
$0172	$2971			GOTO	$-1
$0173	$0000			NOP
$0174	$0000			NOP
;painel.pbas,138 :: 		return
$0175	$0008			RETURN
$0176	$	painel_L_0:
$0176	$2976			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$0177		Div_16x16_S
$01D1		Mul_16x16_S
$021A		Div_16x16_S_L


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$0004		_main_main:
$0023		_main_executa:
$002C		painel_L_1:
$0030		painel_L_4:
$003E		L_main_0:
$0040		painel_L_7:
$0043		painel_L_2:
$0043		painel_L_3:
$0043		painel_L_5:
$0043		painel_L_6:
$0043		painel_L_8:
$0043		painel_L_9:
$004A		painel_L_10:
$004B		painel_L_11:
$004B		painel_L_12:
$0051		L_main_1:
$0053		painel_L_13:
$005B		painel_L_16:
$005F		painel_L_19:
$006D		L_main_2:
$006F		painel_L_22:
$0071		painel_L_17:
$0071		painel_L_18:
$0071		painel_L_20:
$0071		painel_L_21:
$0071		painel_L_23:
$0071		painel_L_24:
$0079		painel_L_25:
$007A		painel_L_14:
$007A		painel_L_15:
$007A		painel_L_26:
$007A		painel_L_27:
$0080		L_main_3:
$0082		painel_L_28:
$008A		painel_L_31:
$008E		painel_L_34:
$009C		L_main_4:
$009E		painel_L_37:
$00A0		painel_L_32:
$00A0		painel_L_33:
$00A0		painel_L_35:
$00A0		painel_L_36:
$00A0		painel_L_38:
$00A0		painel_L_39:
$00A8		painel_L_40:
$00A9		painel_L_29:
$00A9		painel_L_30:
$00A9		painel_L_41:
$00A9		painel_L_42:
$00B1		painel_L_43:
$00B5		painel_L_46:
$00C3		L_main_5:
$00C5		painel_L_49:
$00C8		painel_L_44:
$00C8		painel_L_45:
$00C8		painel_L_47:
$00C8		painel_L_48:
$00C8		painel_L_50:
$00C8		painel_L_51:
$00D0		painel_L_52:
$00D1		painel_L_53:
$00D1		painel_L_54:
$00D9		painel_L_55:
$00E6		painel_L_58:
$00E7		painel_L_59:
$00E7		painel_L_60:
$00E8		painel_L_61:
$00E9		painel_L_56:
$00E9		painel_L_57:
$00E9		painel_L_63:
$00EB		_main_mostra:
$00F3		L_main_6:
$00F5		painel_L_64:
$010D		painel_L_67:
$010E		painel_L_68:
$010E		painel_L_69:
$010F		painel_L_70:
$0110		painel_L_65:
$0110		painel_L_66:
$0110		painel_L_72:
$0116		L_main_7:
$0118		painel_L_73:
$0131		painel_L_77:
$0132		painel_L_79:
$0132		painel_L_80:
$0133		painel_L_74:
$0133		painel_L_75:
$0133		painel_L_81:
$0135		painel_L_82:
$0136		painel_L_83:
$0137		painel_L_85:
$0138		painel_L_87:
$0139		painel_L_89:
$014C		painel_L_91:
$014C		painel_L_92:
$014D		painel_L_93:
$014E		painel_L_95:
$014F		painel_L_97:
$0162		painel_L_99:
$0163		painel_L_101:
$0163		painel_L_102:
$0164		painel_L_103:
$0165		painel_L_105:
$0176		painel_L_0:
$0177		_div_16x16_s:
$01D0		math_L_7:
$01D1		_mul_16x16_s:
$0219		math_L_5:
$021A		_div_16x16_s_l:
$0246		math_L_6:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$000A		PCLATH
$000B		INTCON
$0020		_seleciona
$0022		_incrementaa
$0024		_incrementab
$0026		_guiche
$0028		_dezena
$002A		_unidade
$002C		_bab
$002D		_bc1
$002E		_bg
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$011E		ANSEL
$011F		ANSELH


